@import 'variables';

.container {
  @include section($min: 0.5em);
}

.thumbPanel {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;

  @media screen and (min-width: calc($max-width + 3rem)) {
    margin-left: -0.5rem;
    margin-right: -0.5rem;
  }
}

.row {
  @media screen and (min-width: $gallery-expand) {
    flex-wrap: nowrap;
  }
}

.thumbLink {
  position: relative;
  display: block;
  overflow: hidden;

  width: calc(50% - 1rem);
  flex-grow: 1;

  @media screen and (min-width: $gallery-expand) {
    width: auto;
    flex-basis: 33%;
    max-width: 50%;
  }

  .thumbPanel[data-count = "10"] & {
    flex-basis: 33%;
    @media screen and (min-width: $gallery-expand) {
      flex-basis: 20%;
    }
  }

  .thumbPanel[data-count = "4"] &,
  .thumbPanel[data-count = "8"] &,
  .thumbPanel[data-count = "12"] & {
    flex-basis: 33%;
    @media screen and (min-width: $gallery-expand) {
      flex-basis: 25%;
    }
  }

  .thumbPanel[data-count = "7"] &:nth-child(7n+1),
  .thumbPanel[data-count = "7"] &:nth-child(7n+2),
  .thumbPanel[data-count = "7"] &:nth-child(7n+3) {
    flex-basis: 33%
  }

  .thumbPanel[data-count = "7"] &:nth-child(7n+4),
  .thumbPanel[data-count = "7"] &:nth-child(7n+5),
  .thumbPanel[data-count = "7"] &:nth-child(7n+6),
  .thumbPanel[data-count = "7"] &:nth-child(7n+7) {
    flex-basis: 50%;

    @media screen and (min-width: $gallery-expand) {
      flex-basis: 25%;
    }
  }

  .thumbPanel[data-count = "11"] &:nth-child(11n+1),
  .thumbPanel[data-count = "11"] &:nth-child(11n+2),
  .thumbPanel[data-count = "11"] &:nth-child(11n+3),
  .thumbPanel[data-count = "11"] &:nth-child(11n+4) {
    flex-basis: 50%;

    @media screen and (min-width: $gallery-expand) {
      flex-basis: 25%;
    }
  }

  .thumbPanel[data-count = "11"] &:nth-child(11n+5),
  .thumbPanel[data-count = "11"] &:nth-child(11n+6),
  .thumbPanel[data-count = "11"] &:nth-child(11n+7) {
    flex-basis: 33%;
  }

  .thumbPanel[data-count = "11"] &:nth-child(11n+8),
  .thumbPanel[data-count = "11"] &:nth-child(11n+9),
  .thumbPanel[data-count = "11"] &:nth-child(11n+10),
  .thumbPanel[data-count = "11"] &:nth-child(11n+11) {
    flex-basis: 50%;

    @media screen and (min-width: $gallery-expand) {
      flex-basis: 25%;
    }
  }

  .thumbPanel[data-count = "13"] &:nth-child(13n+1),
  .thumbPanel[data-count = "13"] &:nth-child(13n+2),
  .thumbPanel[data-count = "13"] &:nth-child(13n+3),
  .thumbPanel[data-count = "13"] &:nth-child(13n+4) {
    flex-basis: 25%;
  }

  .thumbPanel[data-count = "13"] &:nth-child(13n+5),
  .thumbPanel[data-count = "13"] &:nth-child(13n+6),
  .thumbPanel[data-count = "13"] &:nth-child(13n+7),
  .thumbPanel[data-count = "13"] &:nth-child(13n+8),
  .thumbPanel[data-count = "13"] &:nth-child(13n+9) {
    // Yes, this math isn't right, but causes a row overflow into the next set
    // and flexbox evens it all out. Only example of this is on the pets page.
    flex-basis: 33%;

    @media screen and (min-width: $gallery-expand) {
      flex-basis: 20%;
    }
  }

  .thumbPanel[data-count = "13"] &:nth-child(13n+10),
  .thumbPanel[data-count = "13"] &:nth-child(13n+11),
  .thumbPanel[data-count = "13"] &:nth-child(13n+12),
  .thumbPanel[data-count = "13"] &:nth-child(13n+13) {
    flex-basis: 25%;
  }
}

.thumbIRContainer {
  position: relative;
  display: block;

  margin: 0.25rem;

  @media screen and (min-width: $gallery-expand) {
    height: 0;
    padding-top: 66%;

    .vertical & {
      height: auto;
      padding-top: 0;
    }
  }

  @media screen and (min-width: $wide-columns) {
    margin: 0.5rem;
  }
}

.thumbImg {
  display: block;
  height: 100%;
  width: 100%;
  object-fit: cover;
  object-position: center center;

  @media screen and (min-width: $gallery-expand) {
    position: absolute;
    top: 0;
    left: 0;

    .vertical & {
      position: relative;
    }
  }
}

.footerPanel {
  @include subtext();
}
